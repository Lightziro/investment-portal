version: "3.7"
services:
    app:
        build:
            args:
                user: sammy
                uid: 1000
            context: .
            dockerfile: Dockerfile
        image: laravel
        container_name: app-laravel
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./docker/php:/usr/local/etc/php/conf.d/
            - ./:/var/www
        networks:
            - laravel
        extra_hosts:
            - "host.docker.internal:host-gateway"
        environment:
            PHP_IDE_CONFIG: "serverName=Docker"

    db:
        image: mysql:latest
        container_name: mysql
        platform: linux/amd64
        restart: unless-stopped
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: example
            MYSQL_ROOT_PASSWORD: Tuscano32
            SERVICE_NAME: mysql
        volumes:
            - ./docker/mysql/data:/var/lib/mysql
            - ./docker/mysql/my_dev.cnf:/etc/my.cnf.d/my.cnf
        networks:
            - laravel
        depends_on:
            - app

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        depends_on:
            - app
        ports:
            - "80:80"
        volumes:
            - ./:/var/www
            - ./docker/nginx:/etc/nginx/conf.d/
        networks:
            - laravel

    python:
        container_name: python
        working_dir: /var/www/
        volumes:
            - .:/var/www/
        environment:
            FLASK_ENV: development
        build:
            context: .
            dockerfile: Dockerfile-python
        ports:
            - "5000:5000"
    rabbitmq:
        image: "rabbitmq:3-management"
        restart: unless-stopped
        hostname: "rabbit"
        ports:
            - "15672:15672"
            - "5672:5672"
        volumes:
            - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.config

    node:
        container_name: node
        image: "node:14"
        restart: unless-stopped
        user: "node"
        working_dir: /var/www/nextjs
        tty: true
        ports:
            - "3000:3000"
        volumes:
            - ./:/var/www/
#        command: npm run production
#    redis:
#        image: redis:alpine
#        container_name: redis
#        working_dir: /var/www/
#        build:
#            context: .
#            dockerfile: Dockerfile-redis
#        volumes:
#            - ./data/redis:/var/www/data
#        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
#        networks:
#            - laravel
#        ports:
#            - "6379:6379"
#
#    queues:
#        build: ./build
#        container_name: queues
#        command: php artisan horizon
#        volumes:
#            - ./code:/application

networks:
    laravel:
